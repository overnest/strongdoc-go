// Code generated by protoc-gen-go. DO NOT EDIT.
// source: documentNoStore.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EncryptDocStreamReq struct {
	// Types that are valid to be assigned to NameOrData:
	//	*EncryptDocStreamReq_DocName
	//	*EncryptDocStreamReq_Plaintext
	NameOrData           isEncryptDocStreamReq_NameOrData `protobuf_oneof:"NameOrData"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *EncryptDocStreamReq) Reset()         { *m = EncryptDocStreamReq{} }
func (m *EncryptDocStreamReq) String() string { return proto.CompactTextString(m) }
func (*EncryptDocStreamReq) ProtoMessage()    {}
func (*EncryptDocStreamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{0}
}

func (m *EncryptDocStreamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptDocStreamReq.Unmarshal(m, b)
}
func (m *EncryptDocStreamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptDocStreamReq.Marshal(b, m, deterministic)
}
func (m *EncryptDocStreamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptDocStreamReq.Merge(m, src)
}
func (m *EncryptDocStreamReq) XXX_Size() int {
	return xxx_messageInfo_EncryptDocStreamReq.Size(m)
}
func (m *EncryptDocStreamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptDocStreamReq.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptDocStreamReq proto.InternalMessageInfo

type isEncryptDocStreamReq_NameOrData interface {
	isEncryptDocStreamReq_NameOrData()
}

type EncryptDocStreamReq_DocName struct {
	DocName string `protobuf:"bytes,1,opt,name=docName,proto3,oneof"`
}

type EncryptDocStreamReq_Plaintext struct {
	Plaintext []byte `protobuf:"bytes,2,opt,name=plaintext,proto3,oneof"`
}

func (*EncryptDocStreamReq_DocName) isEncryptDocStreamReq_NameOrData() {}

func (*EncryptDocStreamReq_Plaintext) isEncryptDocStreamReq_NameOrData() {}

func (m *EncryptDocStreamReq) GetNameOrData() isEncryptDocStreamReq_NameOrData {
	if m != nil {
		return m.NameOrData
	}
	return nil
}

func (m *EncryptDocStreamReq) GetDocName() string {
	if x, ok := m.GetNameOrData().(*EncryptDocStreamReq_DocName); ok {
		return x.DocName
	}
	return ""
}

func (m *EncryptDocStreamReq) GetPlaintext() []byte {
	if x, ok := m.GetNameOrData().(*EncryptDocStreamReq_Plaintext); ok {
		return x.Plaintext
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EncryptDocStreamReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EncryptDocStreamReq_DocName)(nil),
		(*EncryptDocStreamReq_Plaintext)(nil),
	}
}

type EncryptDocStreamResp struct {
	// The ID of the encrypted document.
	DocID string `protobuf:"bytes,1,opt,name=docID,proto3" json:"docID,omitempty"`
	// The encrypted data of the document.
	Ciphertext           []byte   `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptDocStreamResp) Reset()         { *m = EncryptDocStreamResp{} }
func (m *EncryptDocStreamResp) String() string { return proto.CompactTextString(m) }
func (*EncryptDocStreamResp) ProtoMessage()    {}
func (*EncryptDocStreamResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{1}
}

func (m *EncryptDocStreamResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptDocStreamResp.Unmarshal(m, b)
}
func (m *EncryptDocStreamResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptDocStreamResp.Marshal(b, m, deterministic)
}
func (m *EncryptDocStreamResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptDocStreamResp.Merge(m, src)
}
func (m *EncryptDocStreamResp) XXX_Size() int {
	return xxx_messageInfo_EncryptDocStreamResp.Size(m)
}
func (m *EncryptDocStreamResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptDocStreamResp.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptDocStreamResp proto.InternalMessageInfo

func (m *EncryptDocStreamResp) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

func (m *EncryptDocStreamResp) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

type DecryptDocStreamReq struct {
	// Types that are valid to be assigned to IdOrData:
	//	*DecryptDocStreamReq_DocID
	//	*DecryptDocStreamReq_Ciphertext
	IdOrData             isDecryptDocStreamReq_IdOrData `protobuf_oneof:"IdOrData"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DecryptDocStreamReq) Reset()         { *m = DecryptDocStreamReq{} }
func (m *DecryptDocStreamReq) String() string { return proto.CompactTextString(m) }
func (*DecryptDocStreamReq) ProtoMessage()    {}
func (*DecryptDocStreamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{2}
}

func (m *DecryptDocStreamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptDocStreamReq.Unmarshal(m, b)
}
func (m *DecryptDocStreamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptDocStreamReq.Marshal(b, m, deterministic)
}
func (m *DecryptDocStreamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptDocStreamReq.Merge(m, src)
}
func (m *DecryptDocStreamReq) XXX_Size() int {
	return xxx_messageInfo_DecryptDocStreamReq.Size(m)
}
func (m *DecryptDocStreamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptDocStreamReq.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptDocStreamReq proto.InternalMessageInfo

type isDecryptDocStreamReq_IdOrData interface {
	isDecryptDocStreamReq_IdOrData()
}

type DecryptDocStreamReq_DocID struct {
	DocID string `protobuf:"bytes,1,opt,name=docID,proto3,oneof"`
}

type DecryptDocStreamReq_Ciphertext struct {
	Ciphertext []byte `protobuf:"bytes,2,opt,name=ciphertext,proto3,oneof"`
}

func (*DecryptDocStreamReq_DocID) isDecryptDocStreamReq_IdOrData() {}

func (*DecryptDocStreamReq_Ciphertext) isDecryptDocStreamReq_IdOrData() {}

func (m *DecryptDocStreamReq) GetIdOrData() isDecryptDocStreamReq_IdOrData {
	if m != nil {
		return m.IdOrData
	}
	return nil
}

func (m *DecryptDocStreamReq) GetDocID() string {
	if x, ok := m.GetIdOrData().(*DecryptDocStreamReq_DocID); ok {
		return x.DocID
	}
	return ""
}

func (m *DecryptDocStreamReq) GetCiphertext() []byte {
	if x, ok := m.GetIdOrData().(*DecryptDocStreamReq_Ciphertext); ok {
		return x.Ciphertext
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DecryptDocStreamReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DecryptDocStreamReq_DocID)(nil),
		(*DecryptDocStreamReq_Ciphertext)(nil),
	}
}

type DecryptDocStreamResp struct {
	// The ID of the decrypted document.
	DocID string `protobuf:"bytes,1,opt,name=docID,proto3" json:"docID,omitempty"`
	// The decrypted data of the document.
	Plaintext            []byte   `protobuf:"bytes,2,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptDocStreamResp) Reset()         { *m = DecryptDocStreamResp{} }
func (m *DecryptDocStreamResp) String() string { return proto.CompactTextString(m) }
func (*DecryptDocStreamResp) ProtoMessage()    {}
func (*DecryptDocStreamResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{3}
}

func (m *DecryptDocStreamResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptDocStreamResp.Unmarshal(m, b)
}
func (m *DecryptDocStreamResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptDocStreamResp.Marshal(b, m, deterministic)
}
func (m *DecryptDocStreamResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptDocStreamResp.Merge(m, src)
}
func (m *DecryptDocStreamResp) XXX_Size() int {
	return xxx_messageInfo_DecryptDocStreamResp.Size(m)
}
func (m *DecryptDocStreamResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptDocStreamResp.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptDocStreamResp proto.InternalMessageInfo

func (m *DecryptDocStreamResp) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

func (m *DecryptDocStreamResp) GetPlaintext() []byte {
	if m != nil {
		return m.Plaintext
	}
	return nil
}

type EncryptDocReq struct {
	// The name of the document to encrypt.
	DocName string `protobuf:"bytes,1,opt,name=docName,proto3" json:"docName,omitempty"`
	// The data of the document to encrypt.
	Plaintext            string   `protobuf:"bytes,2,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptDocReq) Reset()         { *m = EncryptDocReq{} }
func (m *EncryptDocReq) String() string { return proto.CompactTextString(m) }
func (*EncryptDocReq) ProtoMessage()    {}
func (*EncryptDocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{4}
}

func (m *EncryptDocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptDocReq.Unmarshal(m, b)
}
func (m *EncryptDocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptDocReq.Marshal(b, m, deterministic)
}
func (m *EncryptDocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptDocReq.Merge(m, src)
}
func (m *EncryptDocReq) XXX_Size() int {
	return xxx_messageInfo_EncryptDocReq.Size(m)
}
func (m *EncryptDocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptDocReq.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptDocReq proto.InternalMessageInfo

func (m *EncryptDocReq) GetDocName() string {
	if m != nil {
		return m.DocName
	}
	return ""
}

func (m *EncryptDocReq) GetPlaintext() string {
	if m != nil {
		return m.Plaintext
	}
	return ""
}

type EncryptDocResp struct {
	// The ID of the encrypted document.
	DocID string `protobuf:"bytes,1,opt,name=docID,proto3" json:"docID,omitempty"`
	// The encrypted data of the document.
	Ciphertext           string   `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptDocResp) Reset()         { *m = EncryptDocResp{} }
func (m *EncryptDocResp) String() string { return proto.CompactTextString(m) }
func (*EncryptDocResp) ProtoMessage()    {}
func (*EncryptDocResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{5}
}

func (m *EncryptDocResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptDocResp.Unmarshal(m, b)
}
func (m *EncryptDocResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptDocResp.Marshal(b, m, deterministic)
}
func (m *EncryptDocResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptDocResp.Merge(m, src)
}
func (m *EncryptDocResp) XXX_Size() int {
	return xxx_messageInfo_EncryptDocResp.Size(m)
}
func (m *EncryptDocResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptDocResp.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptDocResp proto.InternalMessageInfo

func (m *EncryptDocResp) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

func (m *EncryptDocResp) GetCiphertext() string {
	if m != nil {
		return m.Ciphertext
	}
	return ""
}

type DecryptDocReq struct {
	// The ID of the document to decrypt.
	DocID string `protobuf:"bytes,1,opt,name=docID,proto3" json:"docID,omitempty"`
	// The data of the document to decrypt.
	Ciphertext           string   `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptDocReq) Reset()         { *m = DecryptDocReq{} }
func (m *DecryptDocReq) String() string { return proto.CompactTextString(m) }
func (*DecryptDocReq) ProtoMessage()    {}
func (*DecryptDocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{6}
}

func (m *DecryptDocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptDocReq.Unmarshal(m, b)
}
func (m *DecryptDocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptDocReq.Marshal(b, m, deterministic)
}
func (m *DecryptDocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptDocReq.Merge(m, src)
}
func (m *DecryptDocReq) XXX_Size() int {
	return xxx_messageInfo_DecryptDocReq.Size(m)
}
func (m *DecryptDocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptDocReq.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptDocReq proto.InternalMessageInfo

func (m *DecryptDocReq) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

func (m *DecryptDocReq) GetCiphertext() string {
	if m != nil {
		return m.Ciphertext
	}
	return ""
}

type DecryptDocResp struct {
	// The ID of the decrypted document.
	DocID string `protobuf:"bytes,1,opt,name=docID,proto3" json:"docID,omitempty"`
	// The decrypted data of the document.
	Plaintext            string   `protobuf:"bytes,2,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptDocResp) Reset()         { *m = DecryptDocResp{} }
func (m *DecryptDocResp) String() string { return proto.CompactTextString(m) }
func (*DecryptDocResp) ProtoMessage()    {}
func (*DecryptDocResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f988da1eff81f5bf, []int{7}
}

func (m *DecryptDocResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptDocResp.Unmarshal(m, b)
}
func (m *DecryptDocResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptDocResp.Marshal(b, m, deterministic)
}
func (m *DecryptDocResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptDocResp.Merge(m, src)
}
func (m *DecryptDocResp) XXX_Size() int {
	return xxx_messageInfo_DecryptDocResp.Size(m)
}
func (m *DecryptDocResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptDocResp.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptDocResp proto.InternalMessageInfo

func (m *DecryptDocResp) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

func (m *DecryptDocResp) GetPlaintext() string {
	if m != nil {
		return m.Plaintext
	}
	return ""
}

func init() {
	proto.RegisterType((*EncryptDocStreamReq)(nil), "proto.EncryptDocStreamReq")
	proto.RegisterType((*EncryptDocStreamResp)(nil), "proto.EncryptDocStreamResp")
	proto.RegisterType((*DecryptDocStreamReq)(nil), "proto.DecryptDocStreamReq")
	proto.RegisterType((*DecryptDocStreamResp)(nil), "proto.DecryptDocStreamResp")
	proto.RegisterType((*EncryptDocReq)(nil), "proto.EncryptDocReq")
	proto.RegisterType((*EncryptDocResp)(nil), "proto.EncryptDocResp")
	proto.RegisterType((*DecryptDocReq)(nil), "proto.DecryptDocReq")
	proto.RegisterType((*DecryptDocResp)(nil), "proto.DecryptDocResp")
}

func init() { proto.RegisterFile("documentNoStore.proto", fileDescriptor_f988da1eff81f5bf) }

var fileDescriptor_f988da1eff81f5bf = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x1b, 0xa4, 0x01, 0x7d, 0xda, 0xc6, 0x94, 0x15, 0x54, 0x4d, 0x68, 0xb2, 0x7c, 0x9a,
	0xa6, 0xad, 0x13, 0xe3, 0x44, 0x6e, 0xad, 0x32, 0x48, 0x10, 0x0c, 0x29, 0x93, 0x38, 0x30, 0xa0,
	0x72, 0x6d, 0xb7, 0x44, 0x34, 0x7e, 0xc1, 0x71, 0x81, 0x0a, 0xed, 0xce, 0xb9, 0x9f, 0x01, 0xf8,
	0x9c, 0x28, 0x4d, 0x4a, 0x9c, 0x46, 0x88, 0x81, 0x38, 0xd9, 0x79, 0x49, 0x7e, 0xf9, 0xe5, 0xff,
	0xac, 0x07, 0x77, 0x05, 0xf2, 0x59, 0x22, 0x95, 0x39, 0xc7, 0x0b, 0x83, 0x5a, 0xf6, 0x52, 0x8d,
	0x06, 0xdd, 0x8d, 0xe5, 0xb2, 0x77, 0xb4, 0x5c, 0xf8, 0xf1, 0x44, 0xaa, 0xe3, 0xec, 0x13, 0x9b,
	0x4c, 0xa4, 0x3e, 0xc1, 0xd4, 0xc4, 0xa8, 0xb2, 0x13, 0xa6, 0x14, 0x1a, 0xb6, 0xdc, 0x17, 0x2f,
	0xd1, 0x21, 0xec, 0x9e, 0x29, 0xae, 0xe7, 0xa9, 0xf1, 0x91, 0x5f, 0x18, 0x2d, 0x59, 0x12, 0xc9,
	0x0f, 0xee, 0x1e, 0xdc, 0x12, 0xc8, 0xcf, 0x59, 0x22, 0xbb, 0x0e, 0x71, 0x0e, 0xda, 0x41, 0x2b,
	0x5a, 0x15, 0xdc, 0x7d, 0x68, 0xa7, 0x53, 0x16, 0x2b, 0x23, 0x3f, 0x9b, 0xee, 0x0d, 0xe2, 0x1c,
	0x6c, 0x06, 0xad, 0xa8, 0x2a, 0x0d, 0x36, 0x01, 0xf2, 0xe7, 0x5e, 0x68, 0x9f, 0x19, 0x46, 0x9f,
	0x41, 0xa7, 0xf9, 0x81, 0x2c, 0x75, 0x3b, 0xb0, 0x21, 0x90, 0x87, 0x7e, 0xc1, 0x8f, 0x8a, 0x0b,
	0x77, 0x1f, 0x80, 0xc7, 0xe9, 0x3b, 0xa9, 0x2b, 0x78, 0x64, 0x55, 0xe8, 0x25, 0xec, 0xfa, 0xb2,
	0xa9, 0x7b, 0xaf, 0x06, 0x0b, 0x5a, 0x2b, 0x1c, 0x69, 0xe2, 0x82, 0x96, 0x0d, 0x1c, 0x00, 0xdc,
	0x0e, 0x45, 0xa9, 0xfa, 0x14, 0x3a, 0x4d, 0xf8, 0x6f, 0x55, 0xef, 0x37, 0x62, 0xb0, 0x42, 0xa0,
	0x3f, 0x1c, 0xd8, 0xaa, 0xfe, 0x3b, 0x77, 0xec, 0xae, 0x45, 0x5a, 0x05, 0xda, 0x20, 0xb5, 0x2d,
	0x92, 0xf7, 0x66, 0xd1, 0x7f, 0x05, 0x77, 0x0e, 0xeb, 0xb4, 0xd3, 0x27, 0xee, 0xd9, 0x17, 0x5a,
	0x02, 0xa8, 0x47, 0xe8, 0x48, 0xc7, 0x23, 0xc9, 0x12, 0x9c, 0x29, 0xd3, 0x4b, 0xc5, 0x98, 0x1e,
	0x11, 0x5a, 0xc9, 0x78, 0x84, 0x86, 0x24, 0x65, 0xb1, 0x20, 0x0f, 0x9e, 0x13, 0x83, 0xe4, 0x25,
	0x4e, 0x51, 0xcc, 0x93, 0xb9, 0xa6, 0x57, 0xb9, 0xe8, 0xb6, 0x8d, 0xfe, 0x8b, 0xd6, 0xb4, 0xed,
	0x24, 0xbd, 0xb7, 0x8b, 0xfe, 0x25, 0xec, 0x1c, 0xae, 0xc1, 0x7e, 0x89, 0x86, 0xfe, 0x9a, 0xe6,
	0x30, 0xf4, 0x57, 0xa6, 0x56, 0x83, 0x3d, 0x42, 0x3f, 0x4a, 0x3d, 0x27, 0xb2, 0xa0, 0x48, 0x41,
	0x32, 0x33, 0x1b, 0x8f, 0xe9, 0x15, 0xfd, 0xe6, 0xc0, 0x56, 0xd5, 0x9e, 0x3c, 0xd1, 0x7f, 0xf3,
	0x5c, 0xe5, 0x59, 0x63, 0xfd, 0x3f, 0xcd, 0xef, 0x0e, 0x6c, 0xdb, 0xe8, 0xeb, 0x9f, 0x9f, 0x5a,
	0xd7, 0x87, 0x8b, 0xfe, 0xeb, 0x3c, 0xcd, 0x3a, 0xea, 0x34, 0x70, 0x1f, 0xff, 0x51, 0xf3, 0x5a,
	0x7d, 0x1f, 0x3c, 0x02, 0xca, 0x31, 0xe9, 0x65, 0x46, 0xa3, 0x9a, 0x64, 0x6c, 0x6a, 0xca, 0xad,
	0x40, 0xde, 0xcb, 0xc4, 0xfb, 0x62, 0x3c, 0x0c, 0x76, 0xfc, 0x72, 0xd4, 0x64, 0xe5, 0xac, 0xf9,
	0xea, 0x38, 0xa3, 0x9b, 0xcb, 0x7b, 0x0f, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0xab, 0x6f, 0x2a,
	0xfb, 0x88, 0x04, 0x00, 0x00,
}
